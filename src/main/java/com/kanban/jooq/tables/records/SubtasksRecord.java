/*
 * This file is generated by jOOQ.
 */
package com.kanban.jooq.tables.records;


import com.kanban.jooq.tables.Subtasks;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SubtasksRecord extends UpdatableRecordImpl<SubtasksRecord> implements Record5<UUID, Boolean, Integer, String, UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.subtasks.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.subtasks.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.subtasks.is_completed</code>.
     */
    public void setIsCompleted(Boolean value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.subtasks.is_completed</code>.
     */
    public Boolean getIsCompleted() {
        return (Boolean) get(1);
    }

    /**
     * Setter for <code>public.subtasks.position</code>.
     */
    public void setPosition(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.subtasks.position</code>.
     */
    public Integer getPosition() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.subtasks.title</code>.
     */
    public void setTitle(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.subtasks.title</code>.
     */
    public String getTitle() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.subtasks.task_id</code>.
     */
    public void setTaskId(UUID value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.subtasks.task_id</code>.
     */
    public UUID getTaskId() {
        return (UUID) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<UUID, Boolean, Integer, String, UUID> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<UUID, Boolean, Integer, String, UUID> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Subtasks.SUBTASKS.ID;
    }

    @Override
    public Field<Boolean> field2() {
        return Subtasks.SUBTASKS.IS_COMPLETED;
    }

    @Override
    public Field<Integer> field3() {
        return Subtasks.SUBTASKS.POSITION;
    }

    @Override
    public Field<String> field4() {
        return Subtasks.SUBTASKS.TITLE;
    }

    @Override
    public Field<UUID> field5() {
        return Subtasks.SUBTASKS.TASK_ID;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public Boolean component2() {
        return getIsCompleted();
    }

    @Override
    public Integer component3() {
        return getPosition();
    }

    @Override
    public String component4() {
        return getTitle();
    }

    @Override
    public UUID component5() {
        return getTaskId();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public Boolean value2() {
        return getIsCompleted();
    }

    @Override
    public Integer value3() {
        return getPosition();
    }

    @Override
    public String value4() {
        return getTitle();
    }

    @Override
    public UUID value5() {
        return getTaskId();
    }

    @Override
    public SubtasksRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public SubtasksRecord value2(Boolean value) {
        setIsCompleted(value);
        return this;
    }

    @Override
    public SubtasksRecord value3(Integer value) {
        setPosition(value);
        return this;
    }

    @Override
    public SubtasksRecord value4(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public SubtasksRecord value5(UUID value) {
        setTaskId(value);
        return this;
    }

    @Override
    public SubtasksRecord values(UUID value1, Boolean value2, Integer value3, String value4, UUID value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SubtasksRecord
     */
    public SubtasksRecord() {
        super(Subtasks.SUBTASKS);
    }

    /**
     * Create a detached, initialised SubtasksRecord
     */
    public SubtasksRecord(UUID id, Boolean isCompleted, Integer position, String title, UUID taskId) {
        super(Subtasks.SUBTASKS);

        setId(id);
        setIsCompleted(isCompleted);
        setPosition(position);
        setTitle(title);
        setTaskId(taskId);
    }
}
