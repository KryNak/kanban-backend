/*
 * This file is generated by jOOQ.
 */
package com.kanban.jooq.tables.records;


import com.kanban.jooq.tables.Boards;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BoardsRecord extends UpdatableRecordImpl<BoardsRecord> implements Record4<UUID, String, Integer, UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.boards.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.boards.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.boards.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.boards.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.boards.position</code>.
     */
    public void setPosition(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.boards.position</code>.
     */
    public Integer getPosition() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.boards.user_id</code>.
     */
    public void setUserId(UUID value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.boards.user_id</code>.
     */
    public UUID getUserId() {
        return (UUID) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<UUID, String, Integer, UUID> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<UUID, String, Integer, UUID> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Boards.BOARDS.ID;
    }

    @Override
    public Field<String> field2() {
        return Boards.BOARDS.NAME;
    }

    @Override
    public Field<Integer> field3() {
        return Boards.BOARDS.POSITION;
    }

    @Override
    public Field<UUID> field4() {
        return Boards.BOARDS.USER_ID;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Integer component3() {
        return getPosition();
    }

    @Override
    public UUID component4() {
        return getUserId();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Integer value3() {
        return getPosition();
    }

    @Override
    public UUID value4() {
        return getUserId();
    }

    @Override
    public BoardsRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public BoardsRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public BoardsRecord value3(Integer value) {
        setPosition(value);
        return this;
    }

    @Override
    public BoardsRecord value4(UUID value) {
        setUserId(value);
        return this;
    }

    @Override
    public BoardsRecord values(UUID value1, String value2, Integer value3, UUID value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BoardsRecord
     */
    public BoardsRecord() {
        super(Boards.BOARDS);
    }

    /**
     * Create a detached, initialised BoardsRecord
     */
    public BoardsRecord(UUID id, String name, Integer position, UUID userId) {
        super(Boards.BOARDS);

        setId(id);
        setName(name);
        setPosition(position);
        setUserId(userId);
    }
}
